from aiogram import Dispatcher, types
from aiogram.filters import Command
from decorators import role_required
from config import VERSION, WHITELIST


@role_required("user")
async def start_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –º–µ–¥–∏–∞ –∏–∑ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π /help —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã."
    )


@role_required("user")
async def version_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /version"""
    await message.answer(f"–í–µ—Ä—Å–∏—è –±–æ—Ç–∞: {VERSION}")


@role_required("user")
async def help_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    user_id = message.from_user.id
    user_role = WHITELIST.get(user_id, "user")
    
    help_text = "ü§ñ **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n\n"
    
    # –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    help_text += "üìã **–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
    help_text += "/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
    help_text += "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
    help_text += "/version - –í–µ—Ä—Å–∏—è –±–æ—Ç–∞\n\n"
    
    # –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    if user_role == "admin":
        help_text += "üõ°Ô∏è **–ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
        help_text += "/users - –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ whitelist\n\n"
    
    help_text += "‚ÑπÔ∏è –í–∞—à–∞ —Ä–æ–ª—å: **" + user_role + "**"
    
    await message.answer(help_text, parse_mode="Markdown")


def register_basic_commands(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥"""
    dp.message(Command("start"))(start_handler)
    dp.message(Command("version"))(version_handler)
    dp.message(Command("help"))(help_handler)
