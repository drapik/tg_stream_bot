# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
.venv/
.cursor/
.qoder/

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# IDE specific files
.vscode/
.idea/
*.swp
*.swo

# Environment variables
.env

# User data (persistent storage)
data/*.json

# Downloaded videos (temporary)
downloads/

# Python cache
__pycache__/
*.py[cod]
*$py.class
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
*.manifest
*.spec

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# OS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Bot specific
*.token
*.key
logs/
temp/

# FFmpeg installation and downloads (added for FFmpeg integration)
ffmpeg-8.0-essentials_build/
ffmpeg*.zip
ffmpeg*.tar.*

# Test files and directories (temporary test scripts)
test_*.py
*_test/
integration_example.py
enhanced_test/
ffmpeg_working_test/
final_test/
simple_test/
test_downloads/
working_test/
reliable_test/
hybrid_test/
pure_ffmpeg_test/
debug_test/
debug_service_test/
bot_test_downloads/
test_service_downloads/
test_working_downloads/
ultimate_test/
temp_cookies/

# Debug and diagnostic scripts (temporary development files)
debug_service.py
diagnose_issue.py
test_hybrid_approach.py
test_pure_ffmpeg.py
test_minimal_ffmpeg.py
test_ffmpeg_service.py
test_enhanced_youtube.py
test_working_service.py
test_reliable_service.py
test_improved_service.py
test_enhanced_service.py
test_bot_integration.py
test_simple_download.py
test_working_ffmpeg.py
test_immediate.py
test_working_v2.py
test_bot_comprehensive.py
test_ultimate.py

# Alternative service implementations (development artifacts)
services/ffmpeg_video_service.py
services/ffmpeg_enhanced_service.py
services/pure_ffmpeg_service.py
services/reliable_video_service.py
services/working_video_service.py
services/final_working_service.py
services/working_video_service_v2.py
services/production_video_service.py
services/ultimate_video_service.py
services/working_final_service.py

# Video files (temporary downloads)
*.mp4
*.webm
*.mkv
*.flv
*.avi
*.mov

# Log files (if created during testing)
*.log
test_*.log

# Documentation files (internal/temporary)
YOUTUBE_BOT_DETECTION_SOLUTION.md
PURE_FFMPEG_INTEGRATION.md
SOLUTION_EXPLANATION.md
FINAL_REALITY_REPORT.md
